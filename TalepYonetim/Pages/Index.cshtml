@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<script src="https://code.jquery.com/jquery-3.6.4.min.js">
</script>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">

@* popuplar burada *@
@await Html.PartialAsync("_Modal") 
@Html.AntiForgeryToken()
<div class="container p-3">
	<div class="row pt-4">
		<div class="col-6">
			<h2 class="text-primary">Talepler</h2>
		</div>
        <div class="col-6 text-end">
            <a asp-page="Ekle" class="btn btn-primary">
                <i class="bi bi-plus-square"></i> &nbsp;Talep Ekle
            </a>
        </div>

    </div>

	<br /><br />

	<table class="table table-bordered table-striped" style="width:100%">
		<thead>
			<tr>
				<th>
					Talep Adı
				</th>
				<th>
					Talep Çeşidi
				</th>
				<th>
					Talep Eden Ad
				</th>
				<th>
					Talep Eden Soyad
				</th>
                <th>
                    Onay
                </th>
				<th>
					İşlemler
				</th>
			</tr>
            @{
                int pageSize = 3; // Number of items per page
                int currentPage = Request.Query["page"].FirstOrDefault() != null ? Convert.ToInt32(Request.Query["page"]) : 1; // Get current page from the query parameter, default to 1
                var items = Model.Talepler.Skip((currentPage - 1) * pageSize).Take(pageSize);
                int totalPages = (int)Math.Ceiling((double)Model.Talepler.Count() / pageSize);
                int paginationSize = 3;
                var half = (int)(paginationSize / 2);
            }
        </thead>
        <tbody>
            @foreach (var obj in items)
            {
                <tr id="rowtodelete" data-row-id="@obj.Id">
                    <td width="16%">@obj.AltKategori.Name</td>
                    <td width="16%">@obj.AltKategori.Kategori.Name</td>
                    <td width="16%">@obj.Edenİsim</td>
                    <td width="16%">@obj.EdenSoyisim</td>
                    <td width="11%" class="text-center">
                        <input type="checkbox" class="onayCheck" @(obj.Onaylandi == 1 ? "checked" : "") />
                    </td>
                    <td class="text-center" width="25%">
                        <div class=" btn-group-justified" role="group">
                            <button type="button" class="btn btn-success onayla-button" id="onaylabutonu" data-talep-id="@obj.Id">Onayla</button>
                            <a type="button" class="btn btn-warning duzenle-button" id="duzenlebutonu" data-talep-id="@obj.Id s" asp-page="/Ekle" asp-route-id="@obj.Id">Düzenle</a>
                            <button type="button" class="btn btn-danger delete-button" id="silbutonu" data-talep-id="@obj.Id">Sil</button>
                            @Html.AntiForgeryToken()
                        </div>
                    </td>
                    
                </tr>
            }

        </tbody>
    </table>
    <!-- Compact Pagination -->
    <div class="d-flex justify-content-center">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(currentPage - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @if (totalPages < paginationSize)
                {
                    // last page
                    for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }

                }
                
                else if (currentPage == 1)
                {
                    // first page
                    for (int i = currentPage; i < currentPage + paginationSize; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                }
                
                else if (currentPage == totalPages)
                {
                    // last page
                    for (int i = currentPage - paginationSize + 1; i <= currentPage; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }

                }
                else
                {
                    // middle ones
                    for (int i = Math.Max(1, currentPage - half); i <= Math.Min(totalPages, currentPage + half); i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(currentPage + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>

</div>
